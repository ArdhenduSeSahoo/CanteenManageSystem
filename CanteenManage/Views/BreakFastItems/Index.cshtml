@using CanteenManage.CanteenRepository.Models
@using CanteenManage.Models
@using CanteenManage.Models.parcialViewModel
@model BreakFastPageDataModel;


@section HeadSection {

	<link rel="stylesheet" href="~/css/customStyles.css">
	<style>

	</style>
}

<div class=" container-fluid" style="
">
	<div class="card mb-1" style="border-radius:15px">
		<div class="card-body">
			<div class="d-flex justify-content-between">
				<div class="row">
					<div class="col">
						<h3>Breakfast Items</h3>
					</div>
				</div>
			</div>

			@(
						await Html.PartialAsync("_ChoseDateVew", new ChoseDateViewDataModel()
			{
				daysOfWeekModels = Model.DayOfWeeks,
			})
						)

			@* <div class="date-selector">
				<label class="date-label">Choose Date:</label>
				<div class="date-buttons">
					@foreach (var dayes in Model.DayOfWeeks)
					{

						@(
													await Html.PartialAsync("_ChoseDateVew", new ChoseDateViewDataModel()
					{
						daysOfWeekModel = dayes,
					})
													)
					}

				</div>
			</div> *@
			<div class="d-flex ">
				<div class="row">
					<div class="col">
						<p>Total for @(Model.DayOfWeeks.Where(d => d.IsSelected)?.FirstOrDefault()?.DateShort) is:- <b><span class="food_total_quantity"> @(Model.totalCountForSelectedDay)</span></b></p>
					</div>
				</div>
			</div>
		</div>
	</div>

	<div class="row row-cols-1 row-cols-md-5 g-2">
		@foreach (Food food in Model.foods)
		{
			<div class="col">
				@(
							await Html.PartialAsync("_FoodItemCardView", new FoodItemCardDataModel()
			{
				food = food,
			})
							)
			</div>
		}

	</div>
</div>



@section Scripts {
	<script src="~/js/canteensystem_js.js"></script>
	<script>

				$(document).ready(function () {

			$(".btn_addItem").click( async function (e) {
				//debugger;
				addFoodItem(e,"/api/FoodOrders/breakfastFoodOrderAdd");
				//console.log(response.json);
			});
			$(".btn_removeItem").click( async function (e) {
				//debugger;
				removeFoodItem(e,"/api/FoodOrders/OrderRemove");

			});
		});
	</script>
}
